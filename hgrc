[ui]
username = Philippe Pepiot <phil@philpep.org>
merge = vimdiff
ignore = ~/.hgignore_global
merge = internal:merge
mergemarkers = detailed

[templates]
git = '\033[0;33mcommit: {rev} {node}\n\033[0mAuthor: {author}\nDate:   {date|rfc822date}\nBranch: {branch}\nPhase:  {phase}\n\n\t{desc|strip|fill68|tabindent}\n\n'
gitshort = '\033[31m{shortest(node, 7)}\033[0m - \033[95m{ifeq(phase, "public", "", "({phase}) ")}\033[33m{if(tags, "(tags: {tags}) ")}{if(bookmarks, "(bookmarks: {bookmarks}) ")}{ifcontains(rev, revset("head()"), "(branch: {branch}) ")}{if(topics, "(topics: {topics}) ")}\033[0m{desc|firstline} \033[32m({age(date)}) \033[94m<{author|person}> {ifeq(rev, revset('.'), '*')}\n'

[diff]
git = 1
showfunc = 1
word-diff = true

[alias]
log = log -v -T git
lg = log --graph --template gitshort -r 'sort(all(), "topo")'
grrep = ! $HG files -0 $2 $3 $4 $5 $6 $7 $8 $9 | xargs -0 grep --color=always -n -H '$1' | $PAGER
contains = log -r $1 --template="{latesttag}\n"
wdiff = ! $HG diff $@ | wdiff -n -d -w '[31m' -x '[0m' -y '[32m' -z '[0m' | sed -e 's:^@@:[35m@@:' -e 's:@@$:@@[0m:' -e 's:^diff -r:[35;1mdiff -r:' | $PAGER
shortlog = !$HG log -T '{author}\n' $@ | sort | uniq -c | sort -rn | $PAGER
review = show-review -r 'ancestors(.) and draft()'
revert = revert --no-backup
describe = log -T "{sub(':.*', '', '{latesttag}')}{sub('^-0-.*', '', '-{latesttagdistance}-hg{shortest(node, 7)}')}\n"

[pager]
attend-help = true
attend-show = true
attend-lg = true

[phases]
publish = False
new-commit = draft

[revsetalias]
pub = heads(public()) and branch(.) and not closed()
wip = ancestors(.) and draft()

[extensions]
show =
pager =
color =
rebase =
record =
shelve =
histedit =
purge =
strip =
patchbomb =
schemes =
terse-status = ~/.hgrc.d/terse-status.py
evolve =
topic =
bookmarks =
phabricator =
absorb =

[phabsend]
confirm = true

[merge-tools]
vimdiff.excutable = vim
vimdiff.args = -f -d $output -M $local $base $other -c "wincmd J" -c "set modifiable" -c "set write"
vimdiff.premerge = keep

[experimental]
graphshorten=true
obshashrange=true

[subrepos]
git:allowed = true

[committemplate]
changeset = {desc}\n\n
    HG: Enter commit message.  Lines beginning with 'HG:' are removed.
    HG: {extramsg}
    HG: --
    HG: user: {author}\n{ifeq(p2rev, "-1", "",
   "HG: branch merge\n")
   }HG: branch '{branch}'\n{if(activebookmark,
   "HG: bookmark '{activebookmark}'\n")   }{subrepos %
   "HG: subrepo {subrepo}\n"              }{file_adds %
   "HG: added {file}\n"                   }{file_mods %
   "HG: changed {file}\n"                 }{file_dels %
   "HG: removed {file}\n"                 }{if(files, "",
   "HG: no files changed\n")}HG: ------------------------ >8 ------------------------
   {diff()}

%include ~/.hgrc.d/local.hgrc
